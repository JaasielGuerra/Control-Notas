-- MySQL Script generated by MySQL Workbench
-- dom 18 sep 2022 20:11:18
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema db_control_notas
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema db_control_notas
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `db_control_notas` ;
USE `db_control_notas` ;

-- -----------------------------------------------------
-- Table `db_control_notas`.`rol`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`rol` (
  `id_rol` BIGINT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(100) NOT NULL,
  `estado` INT NOT NULL,
  `fecha_commit` DATE NOT NULL,
  `hora_commit` TIME NOT NULL,
  PRIMARY KEY (`id_rol`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_control_notas`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`usuario` (
  `id_usuario` BIGINT NOT NULL AUTO_INCREMENT,
  `nombre_completo` VARCHAR(150) NOT NULL,
  `user` VARCHAR(45) NOT NULL,
  `password` VARCHAR(150) NOT NULL,
  `estado` INT NOT NULL,
  `fecha_commit` DATE NOT NULL,
  `hora_commit` TIME NOT NULL,
  `id_rol` BIGINT NOT NULL,
  PRIMARY KEY (`id_usuario`),
  INDEX `fk_usuario_rol1_idx` (`id_rol` ASC),
  CONSTRAINT `fk_usuario_rol1`
    FOREIGN KEY (`id_rol`)
    REFERENCES `db_control_notas`.`rol` (`id_rol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_control_notas`.`grado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`grado` (
  `id_grado` BIGINT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(150) NOT NULL,
  `estado` INT NOT NULL DEFAULT 1,
  `fecha_commit` DATE NOT NULL,
  `hora_commit` TIME NOT NULL,
  `id_usuario` BIGINT NOT NULL,
  `id_grado_anterior` BIGINT NULL,
  `id_grado_siguiente` BIGINT NULL,
  PRIMARY KEY (`id_grado`),
  INDEX `fk_grado_usuario1_idx` (`id_usuario` ASC),
  INDEX `fk_grado_grado1_idx` (`id_grado_anterior` ASC),
  INDEX `fk_grado_grado2_idx` (`id_grado_siguiente` ASC),
  CONSTRAINT `fk_grado_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `db_control_notas`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_grado_grado1`
    FOREIGN KEY (`id_grado_anterior`)
    REFERENCES `db_control_notas`.`grado` (`id_grado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_grado_grado2`
    FOREIGN KEY (`id_grado_siguiente`)
    REFERENCES `db_control_notas`.`grado` (`id_grado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_control_notas`.`seccion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`seccion` (
  `id_seccion` BIGINT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(150) NOT NULL,
  `estado` INT NOT NULL DEFAULT 1,
  `fecha_commit` DATE NOT NULL,
  `hora_commit` TIME NOT NULL,
  `id_grado` BIGINT NOT NULL,
  `id_usuario` BIGINT NOT NULL,
  PRIMARY KEY (`id_seccion`),
  INDEX `fk_seccion_grado_idx` (`id_grado` ASC),
  INDEX `fk_seccion_usuario1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_seccion_grado`
    FOREIGN KEY (`id_grado`)
    REFERENCES `db_control_notas`.`grado` (`id_grado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_seccion_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `db_control_notas`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_control_notas`.`alumno`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`alumno` (
  `id_alumno` BIGINT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(150) NOT NULL,
  `apellido` VARCHAR(150) NOT NULL,
  `direccion` VARCHAR(150) NULL,
  `fecha_nacimiento` DATE NOT NULL,
  `codigo_alumno` VARCHAR(45) NOT NULL,
  `estado` INT NOT NULL DEFAULT 1 COMMENT '1=activo\n0=inactivo',
  `fecha_commit` DATE NOT NULL,
  `hora_commit` TIME NOT NULL,
  `id_seccion` BIGINT NULL COMMENT 'permite null, porque se puede salir del grado y seccion',
  `observacion_expediente` VARCHAR(150) NULL COMMENT 'se usa para poner una observacion del expediente del alumno',
  `id_usuario` BIGINT NOT NULL,
  `estado_expediente` INT NULL COMMENT '1 = completo\n0 = incompleto',
  PRIMARY KEY (`id_alumno`),
  INDEX `fk_alumno_seccion1_idx` (`id_seccion` ASC),
  INDEX `fk_alumno_usuario1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_alumno_seccion1`
    FOREIGN KEY (`id_seccion`)
    REFERENCES `db_control_notas`.`seccion` (`id_seccion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_alumno_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `db_control_notas`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_control_notas`.`materia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`materia` (
  `id_materia` BIGINT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(150) NOT NULL,
  `estado` INT NOT NULL DEFAULT 1,
  `fecha_commit` DATE NOT NULL,
  `hora_commit` TIME NOT NULL,
  `id_grado` BIGINT NOT NULL,
  `id_usuario` BIGINT NOT NULL,
  PRIMARY KEY (`id_materia`),
  INDEX `fk_materia_grado1_idx` (`id_grado` ASC),
  INDEX `fk_materia_usuario1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_materia_grado1`
    FOREIGN KEY (`id_grado`)
    REFERENCES `db_control_notas`.`grado` (`id_grado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_materia_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `db_control_notas`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_control_notas`.`ciclo_escolar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`ciclo_escolar` (
  `id_ciclo_escolar` BIGINT NOT NULL AUTO_INCREMENT,
  `anio` INT NOT NULL,
  `estado` INT NOT NULL COMMENT '1 = aperturado\n2 = cerrado\n3 = eliminado\n',
  `fecha_apertura` DATE NULL,
  `fecha_cierre` DATE NULL,
  `dias_base_asistencia` INT NOT NULL COMMENT 'dias base para control de asistencia de alumnos, generalmete son 200 dias',
  `id_usuario` BIGINT NOT NULL,
  PRIMARY KEY (`id_ciclo_escolar`),
  INDEX `fk_ciclo_escolar_usuario1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_ciclo_escolar_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `db_control_notas`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_control_notas`.`bimestre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`bimestre` (
  `id_bimestre` BIGINT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(150) NOT NULL,
  `puntos_base` DOUBLE(16,2) NOT NULL COMMENT 'punteo total del bimestre, siempre son 100 pts',
  `puntos_actividades` DOUBLE(16,2) NOT NULL COMMENT 'generalmente se toma 60 puntos',
  `puntos_actitudinal` DOUBLE(16,2) NOT NULL COMMENT 'generalemente se toman 10 puntos',
  `puntos_evaluaciones` DOUBLE(16,2) NOT NULL COMMENT 'generalmente se toman 30 puntos',
  `fecha_apertura` DATE NULL,
  `fecha_cierre` DATE NULL,
  `estado` INT NOT NULL DEFAULT 1 COMMENT '0 = eliminado\n1 = aperturado\n2 = cerrado/finalizado',
  `fecha_commit` DATE NOT NULL,
  `hora_commit` TIME NOT NULL,
  `id_ciclo_escolar` BIGINT NOT NULL,
  `id_usuario` BIGINT NOT NULL,
  PRIMARY KEY (`id_bimestre`),
  INDEX `fk_bimestre_ciclo_escolar1_idx` (`id_ciclo_escolar` ASC),
  INDEX `fk_bimestre_usuario1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_bimestre_ciclo_escolar1`
    FOREIGN KEY (`id_ciclo_escolar`)
    REFERENCES `db_control_notas`.`ciclo_escolar` (`id_ciclo_escolar`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_bimestre_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `db_control_notas`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_control_notas`.`plan_trabajo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`plan_trabajo` (
  `id_plan_trabajo` BIGINT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(150) NOT NULL,
  `id_bimestre` BIGINT NOT NULL,
  `id_grado` BIGINT NOT NULL,
  `estado` INT NOT NULL DEFAULT 1,
  `fecha_commit` DATE NOT NULL,
  `hora_commit` TIME NOT NULL,
  `id_usuario` BIGINT NOT NULL,
  PRIMARY KEY (`id_plan_trabajo`),
  INDEX `fk_plan_trabajo_bimestre1_idx` (`id_bimestre` ASC),
  INDEX `fk_plan_trabajo_grado1_idx` (`id_grado` ASC),
  INDEX `fk_plan_trabajo_usuario1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_plan_trabajo_bimestre1`
    FOREIGN KEY (`id_bimestre`)
    REFERENCES `db_control_notas`.`bimestre` (`id_bimestre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_plan_trabajo_grado1`
    FOREIGN KEY (`id_grado`)
    REFERENCES `db_control_notas`.`grado` (`id_grado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_plan_trabajo_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `db_control_notas`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_control_notas`.`actividad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`actividad` (
  `id_actividad` BIGINT NOT NULL AUTO_INCREMENT,
  `descripcion_actividad` VARCHAR(255) NOT NULL,
  `valor_actividad` DOUBLE(16,2) NOT NULL COMMENT 'el valor de la actividad puede cambiar',
  `id_materia` BIGINT NOT NULL,
  `id_plan_trabajo` BIGINT NOT NULL,
  `id_usuario` BIGINT NOT NULL,
  `estado` INT NOT NULL,
  PRIMARY KEY (`id_actividad`),
  INDEX `fk_detalle_plan_trabajo_materia1_idx` (`id_materia` ASC),
  INDEX `fk_detalle_plan_trabajo_plan_trabajo1_idx` (`id_plan_trabajo` ASC),
  INDEX `fk_actividad_usuario1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_detalle_plan_trabajo_materia1`
    FOREIGN KEY (`id_materia`)
    REFERENCES `db_control_notas`.`materia` (`id_materia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_detalle_plan_trabajo_plan_trabajo1`
    FOREIGN KEY (`id_plan_trabajo`)
    REFERENCES `db_control_notas`.`plan_trabajo` (`id_plan_trabajo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_actividad_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `db_control_notas`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_control_notas`.`tipo_evaluacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`tipo_evaluacion` (
  `id_tipo_evaluacion` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(45) NOT NULL COMMENT '- laboratorio\n- examen',
  PRIMARY KEY (`id_tipo_evaluacion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_control_notas`.`evaluacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`evaluacion` (
  `id_evaluacion` BIGINT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(100) NULL,
  `fecha` DATE NOT NULL,
  `ponderacion` DOUBLE(16,2) NOT NULL COMMENT 'aqui se debe ingresar la cantidad de puntos que vale',
  `id_tipo_evaluacion` INT NOT NULL,
  `id_materia` BIGINT NOT NULL,
  `estado` INT NOT NULL COMMENT '1 = activa\n0 = eliminada',
  `fecha_commit` DATE NOT NULL,
  `hora_commit` TIME NOT NULL,
  `id_usuario` BIGINT NOT NULL,
  `id_bimestre` BIGINT NOT NULL,
  PRIMARY KEY (`id_evaluacion`),
  INDEX `fk_evaluacion_tipo_evaluacion1_idx` (`id_tipo_evaluacion` ASC),
  INDEX `fk_evaluacion_materia1_idx` (`id_materia` ASC),
  INDEX `fk_evaluacion_usuario1_idx` (`id_usuario` ASC),
  INDEX `fk_evaluacion_bimestre1_idx` (`id_bimestre` ASC),
  CONSTRAINT `fk_evaluacion_tipo_evaluacion1`
    FOREIGN KEY (`id_tipo_evaluacion`)
    REFERENCES `db_control_notas`.`tipo_evaluacion` (`id_tipo_evaluacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_evaluacion_materia1`
    FOREIGN KEY (`id_materia`)
    REFERENCES `db_control_notas`.`materia` (`id_materia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_evaluacion_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `db_control_notas`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_evaluacion_bimestre1`
    FOREIGN KEY (`id_bimestre`)
    REFERENCES `db_control_notas`.`bimestre` (`id_bimestre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_control_notas`.`detalle_calificacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`detalle_calificacion` (
  `id_detalle_calificacion` BIGINT NOT NULL AUTO_INCREMENT,
  `puntos_obtenidos` DOUBLE(16,2) NOT NULL,
  `id_actividad` BIGINT NULL COMMENT 'permite null, porque puede ser calificacion de evaluacion',
  `id_alumno` BIGINT NOT NULL,
  `id_evaluacion` BIGINT NULL COMMENT 'puede ser null, porque la calificacion puede ser una actividad',
  `fecha_calificacion` DATE NULL COMMENT 'la fecha que se realizo la calificacion',
  `id_usuario` BIGINT NOT NULL,
  `id_bimestre` BIGINT NOT NULL,
  PRIMARY KEY (`id_detalle_calificacion`),
  INDEX `fk_detalle_calificacion_alumno1_idx` (`id_alumno` ASC),
  INDEX `fk_detalle_calificacion_actividad1_idx` (`id_actividad` ASC),
  INDEX `fk_detalle_calificacion_evaluacion1_idx` (`id_evaluacion` ASC),
  INDEX `fk_detalle_calificacion_usuario1_idx` (`id_usuario` ASC),
  INDEX `fk_detalle_calificacion_bimestre1_idx` (`id_bimestre` ASC),
  CONSTRAINT `fk_detalle_calificacion_alumno1`
    FOREIGN KEY (`id_alumno`)
    REFERENCES `db_control_notas`.`alumno` (`id_alumno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_detalle_calificacion_actividad1`
    FOREIGN KEY (`id_actividad`)
    REFERENCES `db_control_notas`.`actividad` (`id_actividad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_detalle_calificacion_evaluacion1`
    FOREIGN KEY (`id_evaluacion`)
    REFERENCES `db_control_notas`.`evaluacion` (`id_evaluacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_detalle_calificacion_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `db_control_notas`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_detalle_calificacion_bimestre1`
    FOREIGN KEY (`id_bimestre`)
    REFERENCES `db_control_notas`.`bimestre` (`id_bimestre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_control_notas`.`institucion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`institucion` (
  `id_institucion` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(255) NOT NULL,
  `direccion` VARCHAR(150) NULL,
  `codigo` VARCHAR(100) NOT NULL,
  `estado` INT NOT NULL DEFAULT 1 COMMENT '1 = abierta\n2 = cerreda',
  `fecha_commit` DATE NOT NULL,
  `hora_commit` TIME NOT NULL,
  `nombre_director` VARCHAR(150) NOT NULL,
  `correo` VARCHAR(150) NULL,
  `telefono` VARCHAR(100) NULL,
  `nivel` VARCHAR(100) NULL COMMENT 'basico',
  `sector` VARCHAR(100) NULL,
  `jornada` VARCHAR(100) NULL,
  PRIMARY KEY (`id_institucion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_control_notas`.`control_lectura`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`control_lectura` (
  `id_control_lectura` BIGINT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(150) NOT NULL,
  `id_seccion` BIGINT NOT NULL,
  `estado` INT NOT NULL DEFAULT 1 COMMENT '0 = eliminado\n1 = aperturado\n2 = cerrado/finalizado',
  `fecha_commit` DATE NOT NULL,
  `hora_commit` TIME NOT NULL,
  `id_usuario` BIGINT NOT NULL,
  PRIMARY KEY (`id_control_lectura`),
  INDEX `fk_control_lectura_seccion1_idx` (`id_seccion` ASC),
  INDEX `fk_control_lectura_usuario1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_control_lectura_seccion1`
    FOREIGN KEY (`id_seccion`)
    REFERENCES `db_control_notas`.`seccion` (`id_seccion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_control_lectura_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `db_control_notas`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_control_notas`.`libro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`libro` (
  `id_libro` BIGINT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(150) NOT NULL,
  `descripcion` VARCHAR(255) NOT NULL,
  `estado` INT NOT NULL DEFAULT 1,
  `fecha_commit` DATE NOT NULL,
  `hora_commit` TIME NOT NULL,
  `disponibilidad` INT NOT NULL COMMENT '1 = libro disponible\n2 = no disponible',
  `id_usuario` BIGINT NOT NULL,
  PRIMARY KEY (`id_libro`),
  INDEX `fk_libro_usuario1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_libro_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `db_control_notas`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_control_notas`.`detalle_lectura`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`detalle_lectura` (
  `id_detalle_lectura` BIGINT NOT NULL AUTO_INCREMENT,
  `fecha` DATE NULL,
  `tipo_operacion` INT NULL COMMENT '1 = entrega de libro\n2 = paginas leidas\n3 = libro terminado de leer',
  `paginas_leidas` INT NULL,
  `id_libro` BIGINT NOT NULL,
  `id_control_lectura` BIGINT NOT NULL,
  `id_alumno` BIGINT NOT NULL,
  PRIMARY KEY (`id_detalle_lectura`),
  INDEX `fk_detalle_lectura_libro1_idx` (`id_libro` ASC),
  INDEX `fk_detalle_lectura_control_lectura1_idx` (`id_control_lectura` ASC),
  INDEX `fk_detalle_lectura_alumno1_idx` (`id_alumno` ASC),
  CONSTRAINT `fk_detalle_lectura_libro1`
    FOREIGN KEY (`id_libro`)
    REFERENCES `db_control_notas`.`libro` (`id_libro`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_detalle_lectura_control_lectura1`
    FOREIGN KEY (`id_control_lectura`)
    REFERENCES `db_control_notas`.`control_lectura` (`id_control_lectura`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_detalle_lectura_alumno1`
    FOREIGN KEY (`id_alumno`)
    REFERENCES `db_control_notas`.`alumno` (`id_alumno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_control_notas`.`listado_asistencia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`listado_asistencia` (
  `id_listado_asistencia` BIGINT NOT NULL AUTO_INCREMENT,
  `observacion` VARCHAR(255) NULL,
  `fecha` DATE NULL,
  `id_seccion` BIGINT NOT NULL,
  `estado` INT NOT NULL DEFAULT 1,
  `fecha_commit` DATE NOT NULL,
  `hora_commit` TIME NOT NULL,
  `id_usuario` BIGINT NOT NULL,
  PRIMARY KEY (`id_listado_asistencia`),
  INDEX `fk_listado_asistencia_seccion1_idx` (`id_seccion` ASC),
  INDEX `fk_listado_asistencia_usuario1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_listado_asistencia_seccion1`
    FOREIGN KEY (`id_seccion`)
    REFERENCES `db_control_notas`.`seccion` (`id_seccion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_listado_asistencia_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `db_control_notas`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_control_notas`.`detalle_listado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`detalle_listado` (
  `id_detalle_listado` INT NOT NULL AUTO_INCREMENT,
  `temperatura` DOUBLE(16,2) NULL,
  `observacion` VARCHAR(255) NULL COMMENT 'alguna observacion de manera individual al alumno',
  `id_alumno` BIGINT NOT NULL,
  `id_listado_asistencia` BIGINT NOT NULL,
  PRIMARY KEY (`id_detalle_listado`),
  INDEX `fk_detalle_listado_alumno1_idx` (`id_alumno` ASC),
  INDEX `fk_detalle_listado_listado_asistencia1_idx` (`id_listado_asistencia` ASC),
  CONSTRAINT `fk_detalle_listado_alumno1`
    FOREIGN KEY (`id_alumno`)
    REFERENCES `db_control_notas`.`alumno` (`id_alumno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_detalle_listado_listado_asistencia1`
    FOREIGN KEY (`id_listado_asistencia`)
    REFERENCES `db_control_notas`.`listado_asistencia` (`id_listado_asistencia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_control_notas`.`documento_expediente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`documento_expediente` (
  `id_documento_expediente` BIGINT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(255) NULL,
  `estado` INT NOT NULL DEFAULT 1,
  `fecha_commit` DATE NOT NULL,
  `hora_commit` TIME NOT NULL,
  `id_usuario` BIGINT NOT NULL,
  PRIMARY KEY (`id_documento_expediente`),
  INDEX `fk_documento_expediente_usuario1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_documento_expediente_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `db_control_notas`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_control_notas`.`detalle_expediente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`detalle_expediente` (
  `id_detalle_expediente` BIGINT NOT NULL AUTO_INCREMENT,
  `estado` INT NOT NULL COMMENT '1 = si se tiene\n0 = no se tiene',
  `id_documento_expediente` BIGINT NOT NULL,
  `id_alumno` BIGINT NOT NULL,
  PRIMARY KEY (`id_detalle_expediente`),
  INDEX `fk_detalle_expediente_documento_expediente1_idx` (`id_documento_expediente` ASC),
  INDEX `fk_detalle_expediente_alumno1_idx` (`id_alumno` ASC),
  CONSTRAINT `fk_detalle_expediente_documento_expediente1`
    FOREIGN KEY (`id_documento_expediente`)
    REFERENCES `db_control_notas`.`documento_expediente` (`id_documento_expediente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_detalle_expediente_alumno1`
    FOREIGN KEY (`id_alumno`)
    REFERENCES `db_control_notas`.`alumno` (`id_alumno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_control_notas`.`nota`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`nota` (
  `id_nota` BIGINT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(255) NULL,
  `id_alumno` BIGINT NOT NULL,
  `id_seccion` BIGINT NOT NULL,
  `id_usuario` BIGINT NOT NULL,
  `id_ciclo_escolar` BIGINT NOT NULL,
  `prime_informe` VARCHAR(150) NULL,
  `fecha_primer_informe` DATE NULL,
  `segundo_informe` VARCHAR(150) NULL,
  `fecha_segundo_informe` DATE NULL,
  `tercer_informe` VARCHAR(150) NULL,
  `fecha_tercer_informe` DATE NULL,
  `cuarto_informe` VARCHAR(150) NULL,
  `fecha_cuarto_informe` DATE NULL,
  PRIMARY KEY (`id_nota`),
  INDEX `fk_nota_alumno1_idx` (`id_alumno` ASC),
  INDEX `fk_nota_seccion1_idx` (`id_seccion` ASC),
  INDEX `fk_nota_usuario1_idx` (`id_usuario` ASC),
  INDEX `fk_nota_ciclo_escolar1_idx` (`id_ciclo_escolar` ASC),
  CONSTRAINT `fk_nota_alumno1`
    FOREIGN KEY (`id_alumno`)
    REFERENCES `db_control_notas`.`alumno` (`id_alumno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_nota_seccion1`
    FOREIGN KEY (`id_seccion`)
    REFERENCES `db_control_notas`.`seccion` (`id_seccion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_nota_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `db_control_notas`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_nota_ciclo_escolar1`
    FOREIGN KEY (`id_ciclo_escolar`)
    REFERENCES `db_control_notas`.`ciclo_escolar` (`id_ciclo_escolar`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_control_notas`.`detalle_nota`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`detalle_nota` (
  `id_detalle_nota` BIGINT NOT NULL AUTO_INCREMENT,
  `tipo_nota` INT NOT NULL COMMENT 'para determinar si es nota de un bimestre o nota final de año\n\n1 = bimestre\n2 = promedio final',
  `valor_nota` DOUBLE(16,2) NOT NULL,
  `id_materia` BIGINT NOT NULL,
  `id_bimestre` BIGINT NULL COMMENT 'permite null, porque puede ser nota de final de año (promedio final)',
  `id_nota` BIGINT NOT NULL,
  `id_usuario` BIGINT NOT NULL,
  PRIMARY KEY (`id_detalle_nota`),
  INDEX `fk_detalle_nota_materia1_idx` (`id_materia` ASC),
  INDEX `fk_detalle_nota_bimestre1_idx` (`id_bimestre` ASC),
  INDEX `fk_detalle_nota_nota1_idx` (`id_nota` ASC),
  INDEX `fk_detalle_nota_usuario1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_detalle_nota_materia1`
    FOREIGN KEY (`id_materia`)
    REFERENCES `db_control_notas`.`materia` (`id_materia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_detalle_nota_bimestre1`
    FOREIGN KEY (`id_bimestre`)
    REFERENCES `db_control_notas`.`bimestre` (`id_bimestre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_detalle_nota_nota1`
    FOREIGN KEY (`id_nota`)
    REFERENCES `db_control_notas`.`nota` (`id_nota`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_detalle_nota_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `db_control_notas`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_control_notas`.`control_actitudinal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`control_actitudinal` (
  `id_control_actitudinal` BIGINT NOT NULL AUTO_INCREMENT,
  `puntos_iniciales` DOUBLE(16,2) NOT NULL COMMENT 'es la cantidad de puntos con que comienza el alumno al inicio del bimestre, no debe superar los puntos configurados en el bimestre',
  `puntos_actuales` DOUBLE(16,2) NOT NULL COMMENT 'son los puntos que el alumno lleva, de aqui se le va restando, esta cantidad es variable',
  `id_materia` BIGINT NOT NULL,
  `id_alumno` BIGINT NOT NULL,
  PRIMARY KEY (`id_control_actitudinal`),
  INDEX `fk_control_actitudinal_materia1_idx` (`id_materia` ASC),
  INDEX `fk_control_actitudinal_alumno1_idx` (`id_alumno` ASC),
  CONSTRAINT `fk_control_actitudinal_materia1`
    FOREIGN KEY (`id_materia`)
    REFERENCES `db_control_notas`.`materia` (`id_materia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_control_actitudinal_alumno1`
    FOREIGN KEY (`id_alumno`)
    REFERENCES `db_control_notas`.`alumno` (`id_alumno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_control_notas`.`asignacion_materia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`asignacion_materia` (
  `id_asignacion_materia` BIGINT NOT NULL AUTO_INCREMENT,
  `id_usuario` BIGINT NOT NULL,
  `id_materia` BIGINT NOT NULL,
  `estado` INT NOT NULL COMMENT '1 = registrado\n0 = eliminado',
  PRIMARY KEY (`id_asignacion_materia`),
  INDEX `fk_asignacion_materia_usuario1_idx` (`id_usuario` ASC),
  INDEX `fk_asignacion_materia_materia1_idx` (`id_materia` ASC),
  CONSTRAINT `fk_asignacion_materia_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `db_control_notas`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_asignacion_materia_materia1`
    FOREIGN KEY (`id_materia`)
    REFERENCES `db_control_notas`.`materia` (`id_materia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_control_notas`.`historial_actitudinal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_control_notas`.`historial_actitudinal` (
  `id_historial_actitudinal` BIGINT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(150) NOT NULL,
  `puntos_restados` DOUBLE(16,2) NOT NULL COMMENT 'cantidad de puntos que se agregan',
  `puntos_sumados` DOUBLE(16,2) NOT NULL COMMENT 'cantidad de puntos que se quitan',
  `puntos_actuales` DOUBLE(16,2) NOT NULL,
  `fecha` DATE NOT NULL,
  `id_control_actitudinal` BIGINT NOT NULL,
  `fecha_commit` DATE NOT NULL,
  `hora_commit` TIME NOT NULL,
  `id_usuario` BIGINT NOT NULL,
  PRIMARY KEY (`id_historial_actitudinal`),
  INDEX `fk_historial_actitudinal_control_actitudinal1_idx` (`id_control_actitudinal` ASC),
  INDEX `fk_historial_actitudinal_usuario1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_historial_actitudinal_control_actitudinal1`
    FOREIGN KEY (`id_control_actitudinal`)
    REFERENCES `db_control_notas`.`control_actitudinal` (`id_control_actitudinal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_historial_actitudinal_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `db_control_notas`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;




-- MySQL dump 10.19  Distrib 10.3.34-MariaDB, for debian-linux-gnu (x86_64)
--
-- Host: localhost    Database: db_control_notas
-- ------------------------------------------------------
-- Server version	10.3.34-MariaDB-0ubuntu0.20.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Dumping data for table `grado`
--

LOCK TABLES `grado` WRITE;
/*!40000 ALTER TABLE `grado` DISABLE KEYS */;
INSERT INTO `grado` VALUES (1,'PRIMERO BÁSICO',1,'2022-08-04','10:30:00',1,NULL,2),(2,'SEGUNDO BÁSICO',1,'2022-08-04','10:30:00',1,1,3),(3,'TERCERO BÁSICO',1,'2022-08-04','10:30:00',1,2,NULL);
/*!40000 ALTER TABLE `grado` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping data for table `rol`
--

LOCK TABLES `rol` WRITE;
/*!40000 ALTER TABLE `rol` DISABLE KEYS */;
INSERT INTO `rol` VALUES (1,'ROLE_DIRECTOR',1,'2022-08-04','09:23:00'),(2,'ROLE_DOCENTE',1,'2022-08-04','09:23:00');
/*!40000 ALTER TABLE `rol` ENABLE KEYS */;
UNLOCK TABLES;


--
-- Dumping data for table `seccion`
--

LOCK TABLES `seccion` WRITE;
/*!40000 ALTER TABLE `seccion` DISABLE KEYS */;
INSERT INTO `seccion` VALUES (1,'A',1,'2022-08-04','11:00:00',1,1),(2,'A',1,'2022-08-04','11:00:00',2,1),(3,'A',1,'2022-08-04','11:00:00',3,1);
/*!40000 ALTER TABLE `seccion` ENABLE KEYS */;
UNLOCK TABLES;


--
-- Dumping data for table `usuario`
--

LOCK TABLES `usuario` WRITE;
/*!40000 ALTER TABLE `usuario` DISABLE KEYS */;
INSERT INTO `usuario` VALUES (1,'DIRECTOR INSTITUTO','director','$2a$10$4qoZhgNKSjjqLgpS4zUosOTrMKS.48or1CaaFdR80sCkle3U4tr6m',1,'2022-08-04','10:20:00',1),(2,'DOCENTE INSTITUTO','docente','$2a$10$zo7jMwlS8nTdaO3MeCvK6.vNFtWfRTN2sA4lal435ziqtSWWDJzcK',1,'2022-08-04','10:20:00',2);
/*!40000 ALTER TABLE `usuario` ENABLE KEYS */;
UNLOCK TABLES;


--
-- Dumping data for table `materia`
--

LOCK TABLES `materia` WRITE;
/*!40000 ALTER TABLE `materia` DISABLE KEYS */;
INSERT INTO `materia` VALUES (1,'MATEMÁTICAS',1,'2022-08-28','20:07:00',1,1),(2,'ESPAÑOL',1,'2022-08-28','20:07:00',1,1),(3,'CULTURA Y LENGUAS MAYA GARÍFUNA Y XINCA',1,'2022-08-28','20:07:00',1,1),(4,'CIENCIAS NATURALES',1,'2022-08-28','20:07:00',1,1),(5,'CIENCIAS SOCIALES, CIVISMO Y CULTURA CIUDADANA',1,'2022-08-28','20:07:00',1,1),(6,'LENGUA EXTRANJERA (INGLÉS)',1,'2022-08-28','20:07:00',1,1),(7,'EXPRESIÓN Y APRECIACIÓN ARTÍSTICA',1,'2022-08-28','20:07:00',1,1),(8,'EMPRENDIMIENTO PARA LA PRODUCTIVIDAD',1,'2022-08-28','20:07:00',1,1),(9,'TECNOLOGÍA EDUCATIVA',1,'2022-08-28','20:07:00',1,1),(10,'EDUCACIÓN FÍSICA',1,'2022-08-28','20:07:00',1,1),(11,'MATEMÁTICAS',1,'2022-08-28','20:07:00',2,1),(12,'ESPAÑOL',1,'2022-08-28','20:07:00',2,1),(13,'CULTURA Y LENGUAS MAYA GARÍFUNA Y XINCA',1,'2022-08-28','20:07:00',2,1),(14,'CIENCIAS NATURALES',1,'2022-08-28','20:07:00',2,1),(15,'CIENCIAS SOCIALES, CIVISMO Y CULTURA CIUDADANA',1,'2022-08-28','20:07:00',2,1),(16,'LENGUA EXTRANJERA (INGLÉS)',1,'2022-08-28','20:07:00',2,1),(17,'EXPRESIÓN Y APRECIACIÓN ARTÍSTICA',1,'2022-08-28','20:07:00',2,1),(18,'EMPRENDIMIENTO PARA LA PRODUCTIVIDAD',1,'2022-08-28','20:07:00',2,1),(19,'TECNOLOGÍA EDUCATIVA',1,'2022-08-28','20:07:00',2,1),(20,'EDUCACIÓN FÍSICA',1,'2022-08-28','20:07:00',2,1),(21,'MATEMÁTICAS',1,'2022-08-28','20:07:00',3,1),(22,'ESPAÑOL',1,'2022-08-28','20:07:00',3,1),(23,'CULTURA Y LENGUAS MAYA GARÍFUNA Y XINCA',1,'2022-08-28','20:07:00',3,1),(24,'CIENCIAS NATURALES',1,'2022-08-28','20:07:00',3,1),(25,'CIENCIAS SOCIALES, CIVISMO Y CULTURA CIUDADANA',1,'2022-08-28','20:07:00',3,1),(26,'LENGUA EXTRANJERA (INGLÉS)',1,'2022-08-28','20:07:00',3,1),(27,'EXPRESIÓN Y APRECIACIÓN ARTÍSTICA',1,'2022-08-28','20:07:00',3,1),(28,'EMPRENDIMIENTO PARA LA PRODUCTIVIDAD',1,'2022-08-28','20:07:00',3,1),(29,'TECNOLOGÍA EDUCATIVA',1,'2022-08-28','20:07:00',3,1),(30,'EDUCACIÓN FÍSICA',1,'2022-08-28','20:07:00',3,1);
/*!40000 ALTER TABLE `materia` ENABLE KEYS */;
UNLOCK TABLES;


--
-- Dumping data for table `institucion`
--

LOCK TABLES `institucion` WRITE;
/*!40000 ALTER TABLE `institucion` DISABLE KEYS */;
INSERT INTO `institucion` VALUES (1,'INEB DE TELESECUNDARIA \"MANUEL JOSE ARCE\"','ALDEA LAS VIÑAS, LOS AMATES, IZABAL','18-05-2419-40',1,'2022-09-11','23:44:31','José Alberto Acevedo Arroyo','','','BÁSICO','OFICIAL','VESPERTINA');
/*!40000 ALTER TABLE `institucion` ENABLE KEYS */;
UNLOCK TABLES;


--
-- Dumping data for table `tipo_evaluacion`
--

LOCK TABLES `tipo_evaluacion` WRITE;
/*!40000 ALTER TABLE `tipo_evaluacion` DISABLE KEYS */;
INSERT INTO `tipo_evaluacion` VALUES (1,'EXÁMEN'),(2,'LABORATORIO');
/*!40000 ALTER TABLE `tipo_evaluacion` ENABLE KEYS */;
UNLOCK TABLES;

/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2022-08-21 20:27:40




-- -----------------------------------------------------
-- Funciones
-- -----------------------------------------------------
DROP function IF EXISTS `func_contar_alumnos_expediente_incompleto`;
DELIMITER $$
CREATE FUNCTION `func_contar_alumnos_expediente_incompleto`() RETURNS int(11)
BEGIN
    RETURN (

        SELECT
            COUNT(a.id_alumno)
        FROM
            alumno a
        WHERE
                a.estado = 1
          AND
            (
                        a.estado_expediente = 0
                    OR
                        a.estado_expediente IS NULL
                )
    );
END$$

DELIMITER ;
;

DROP function IF EXISTS `func_existe_plan_trabajo`;

DELIMITER $$
CREATE FUNCTION `func_existe_plan_trabajo` (
	id_bimestre BIGINT,
    id_grado BIGINT
)
RETURNS INTEGER
BEGIN

RETURN (

	SELECT 
		COUNT(p.id_plan_trabajo)
	FROM
		plan_trabajo p
	WHERE
		p.id_bimestre = id_bimestre AND p.id_grado = id_grado
			AND p.estado = 1 -- plan activo

);
END$$

DELIMITER ;


DROP function IF EXISTS `func_puntos_disponibles_evaluaciones`;
DELIMITER $$
CREATE FUNCTION `func_puntos_disponibles_evaluaciones`(
    id_materia long,
    id_bimestre long,
    id_evaluacion_excluir long
) RETURNS double(16,2)
BEGIN

    DECLARE puntos_evaluaciones DOUBLE;

    SELECT
        b.puntos_evaluaciones INTO puntos_evaluaciones
    FROM
        bimestre b
    WHERE
            b.id_bimestre = id_bimestre;


    IF  id_evaluacion_excluir IS NOT NULL THEN
        RETURN (

            
            SELECT
                (puntos_evaluaciones - COALESCE(SUM(e.ponderacion), 0.0)) AS total_evaluaciones
            FROM
                evaluacion e
            WHERE
                    e.id_materia = id_materia
              AND e.id_bimestre = id_bimestre
              AND e.estado = 1
              AND NOT e.id_evaluacion = id_evaluacion_excluir
        );
    ELSE

        RETURN (

            
            SELECT
                (puntos_evaluaciones - COALESCE(SUM(e.ponderacion), 0.0)) AS total_evaluaciones
            FROM
                evaluacion e
            WHERE
                    e.id_materia = id_materia
              AND e.id_bimestre = id_bimestre
              AND e.estado = 1
        );

    END IF;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- Procedimientos
-- -----------------------------------------------------
DROP procedure IF EXISTS `proc_obtener_grados_sin_plan_trabajo`;

DELIMITER $$
CREATE PROCEDURE `proc_obtener_grados_sin_plan_trabajo`(
    id_bimestre bigint
)
BEGIN

    SELECT
        g.id_grado AS id, g.descripcion AS descripcion
    FROM
        grado g
    WHERE
            (SELECT
                 COUNT(p.id_plan_trabajo)
             FROM
                 plan_trabajo p
             WHERE
                     p.id_bimestre = id_bimestre
               AND p.id_grado = g.id_grado
               AND p.estado = 1) = 0;

END$$
DELIMITER ;
;


DROP PROCEDURE IF EXISTS proc_consulta_calificar_actividades;

DELIMITER $$
CREATE PROCEDURE `proc_consulta_calificar_actividades`( 
	id_bimestre LONG,
	estado_actividad INT,
	ids_materia VARCHAR(255)
)
BEGIN
	
	SET @query_ = CONCAT('
		SELECT
			a.id_actividad,
			m.descripcion materia,
			g.descripcion grado_materia,
			a.descripcion_actividad,
			a.valor_actividad,
			a.estado estado_actividad,
			a.id_materia
		FROM
			actividad a
		JOIN plan_trabajo pt ON
			pt.id_plan_trabajo = a.id_plan_trabajo
		JOIN materia m ON
			m.id_materia = a.id_materia
		JOIN grado g ON
			g.id_grado = m.id_grado
		WHERE
			pt.id_bimestre = ', id_bimestre,
			' AND a.estado = ', estado_actividad,
			' AND a.id_materia IN(
	', ids_materia, ')');

    PREPARE stmt FROM @query_;
    EXECUTE stmt;
	DEALLOCATE PREPARE stmt;

END$$
DELIMITER ;